#!/usr/bin/env python3
"""
Module that demonstrates asynchronous list comprehension
"""
from typing import List

# Importing the async_generator coroutine
async_generator = __import__('0-async_generator').async_generator


async def async_comprehension() -> List[float]:
    """
    Asynchronous coroutine that collects 10 random numbers generated by
    async_generator and returns them as a list.
    """
    # Using an async comprehension to gather values from async_generator
    return [number async for number in async_generator()]
